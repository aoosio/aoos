ALTER TABLE public.platform_owners ADD CONSTRAINT platform_owners_pkey PRIMARY KEY (user_id);
ALTER TABLE public.platform_owners ADD CONSTRAINT platform_owners_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;
ALTER TABLE public.org_members ADD CONSTRAINT org_members_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.org_members ADD CONSTRAINT org_members_pkey PRIMARY KEY (org_id, user_id);
ALTER TABLE public.org_members ADD CONSTRAINT org_members_role_check CHECK (role = ANY (ARRAY['admin'::text, 'po_manager'::text]));
ALTER TABLE public.org_members ADD CONSTRAINT org_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;
ALTER TABLE public.platform_admins ADD CONSTRAINT platform_admins_pkey PRIMARY KEY (user_id);
ALTER TABLE public.platform_admins ADD CONSTRAINT platform_admins_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;
ALTER TABLE public.stock_uploads ADD CONSTRAINT stock_uploads_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.stock_uploads ADD CONSTRAINT stock_uploads_pkey PRIMARY KEY (id);
ALTER TABLE public.stock_uploads ADD CONSTRAINT stock_uploads_qty_check CHECK (qty >= 0::numeric);
ALTER TABLE public.sales_uploads ADD CONSTRAINT sales_uploads_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.sales_uploads ADD CONSTRAINT sales_uploads_pkey PRIMARY KEY (id);
ALTER TABLE public.sales_uploads ADD CONSTRAINT sales_uploads_sold_qty_check CHECK (sold_qty >= 0::numeric);
ALTER TABLE public.stores ADD CONSTRAINT stores_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.stores ADD CONSTRAINT stores_pkey PRIMARY KEY (id);
ALTER TABLE public.platform_messages ADD CONSTRAINT platform_messages_from_user_fkey FOREIGN KEY (from_user) REFERENCES auth.users(id) ON DELETE SET NULL;
ALTER TABLE public.platform_messages ADD CONSTRAINT platform_messages_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.platform_messages ADD CONSTRAINT platform_messages_pkey PRIMARY KEY (id);
ALTER TABLE public.platform_messages ADD CONSTRAINT platform_messages_scope_check CHECK (scope = ANY (ARRAY['all'::text, 'owners'::text, 'po_managers'::text, 'org'::text, 'user'::text]));
ALTER TABLE public.platform_messages ADD CONSTRAINT platform_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;
ALTER TABLE public.supplier_contacts ADD CONSTRAINT chk_supplier_contacts_e164 CHECK (phone_e164 IS NULL OR phone_e164 ~ '^\+[1-9][0-9]{7,14}$'::text);
ALTER TABLE public.supplier_contacts ADD CONSTRAINT supplier_contacts_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.supplier_contacts ADD CONSTRAINT supplier_contacts_org_id_phone_e164_key UNIQUE (org_id, phone_e164);
ALTER TABLE public.supplier_contacts ADD CONSTRAINT supplier_contacts_pkey PRIMARY KEY (id);
ALTER TABLE public.supplier_contacts ADD CONSTRAINT supplier_contacts_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE CASCADE;
ALTER TABLE public.members ADD CONSTRAINT chk_members_e164 CHECK (phone_e164 IS NULL OR phone_e164 ~ '^\+[1-9][0-9]{7,14}$'::text);
ALTER TABLE public.members ADD CONSTRAINT members_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.members ADD CONSTRAINT members_org_id_user_id_key UNIQUE (org_id, user_id);
ALTER TABLE public.members ADD CONSTRAINT members_pkey PRIMARY KEY (id);
ALTER TABLE public.members ADD CONSTRAINT members_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;
ALTER TABLE public.organizations ADD CONSTRAINT organizations_pkey PRIMARY KEY (id);
ALTER TABLE public.suppliers ADD CONSTRAINT suppliers_org_fk FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.suppliers ADD CONSTRAINT suppliers_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.suppliers ADD CONSTRAINT suppliers_phone_e164_chk CHECK (phone_e164 IS NULL OR phone_e164 ~ '^\+[1-9]\d{7,14}$'::text);
ALTER TABLE public.suppliers ADD CONSTRAINT suppliers_phone_e164_format CHECK (phone_e164 IS NULL OR phone_e164 ~ '^\+[1-9][0-9]{7,14}$'::text);
ALTER TABLE public.suppliers ADD CONSTRAINT suppliers_pkey PRIMARY KEY (id);
ALTER TABLE public.reorder_prefs ADD CONSTRAINT reorder_prefs_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.reorder_prefs ADD CONSTRAINT reorder_prefs_pkey PRIMARY KEY (id);
ALTER TABLE public.reorder_prefs ADD CONSTRAINT reorder_prefs_product_id_fkey FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE;
ALTER TABLE public.reorder_prefs ADD CONSTRAINT reorder_prefs_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE CASCADE;
ALTER TABLE public.reorder_prefs ADD CONSTRAINT reorder_prefs_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id);
ALTER TABLE public.report_uploads ADD CONSTRAINT report_uploads_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.report_uploads ADD CONSTRAINT report_uploads_pkey PRIMARY KEY (id);
ALTER TABLE public.report_uploads ADD CONSTRAINT report_uploads_store_id_fkey FOREIGN KEY (store_id) REFERENCES stores(id) ON DELETE CASCADE;
ALTER TABLE public.report_uploads ADD CONSTRAINT report_uploads_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES auth.users(id);
ALTER TABLE public.sales_rows ADD CONSTRAINT sales_rows_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.sales_rows ADD CONSTRAINT sales_rows_pkey PRIMARY KEY (id);
ALTER TABLE public.sales_rows ADD CONSTRAINT sales_rows_product_id_fkey FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE RESTRICT;
ALTER TABLE public.sales_rows ADD CONSTRAINT sales_rows_store_id_fkey FOREIGN KEY (store_id) REFERENCES stores(id) ON DELETE CASCADE;
ALTER TABLE public.sales_rows ADD CONSTRAINT sales_rows_upload_id_fkey FOREIGN KEY (upload_id) REFERENCES report_uploads(id) ON DELETE CASCADE;
ALTER TABLE public.inventory_snapshots ADD CONSTRAINT inventory_snapshots_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.inventory_snapshots ADD CONSTRAINT inventory_snapshots_pkey PRIMARY KEY (id);
ALTER TABLE public.inventory_snapshots ADD CONSTRAINT inventory_snapshots_product_id_fkey FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE RESTRICT;
ALTER TABLE public.inventory_snapshots ADD CONSTRAINT inventory_snapshots_store_id_fkey FOREIGN KEY (store_id) REFERENCES stores(id) ON DELETE CASCADE;
ALTER TABLE public.inventory_snapshots ADD CONSTRAINT inventory_snapshots_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE SET NULL;
ALTER TABLE public.inventory_snapshots ADD CONSTRAINT inventory_snapshots_upload_id_fkey FOREIGN KEY (upload_id) REFERENCES report_uploads(id) ON DELETE CASCADE;
ALTER TABLE public.purchase_order_items ADD CONSTRAINT purchase_order_items_pkey PRIMARY KEY (id);
ALTER TABLE public.purchase_order_items ADD CONSTRAINT purchase_order_items_po_id_fkey FOREIGN KEY (po_id) REFERENCES purchase_orders(id) ON DELETE CASCADE;
ALTER TABLE public.purchase_order_items ADD CONSTRAINT purchase_order_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE RESTRICT;
ALTER TABLE public.channel_whatsapp ADD CONSTRAINT channel_whatsapp_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.channel_whatsapp ADD CONSTRAINT channel_whatsapp_org_id_key UNIQUE (org_id);
ALTER TABLE public.channel_whatsapp ADD CONSTRAINT channel_whatsapp_pkey PRIMARY KEY (id);
ALTER TABLE public.channel_whatsapp ADD CONSTRAINT chk_channel_connect_method CHECK (connect_method = ANY (ARRAY['MANUAL'::text, 'EMBEDDED'::text]));
ALTER TABLE public.inquiries ADD CONSTRAINT inquiries_answered_by_fkey FOREIGN KEY (answered_by) REFERENCES auth.users(id);
ALTER TABLE public.inquiries ADD CONSTRAINT inquiries_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id);
ALTER TABLE public.inquiries ADD CONSTRAINT inquiries_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.inquiries ADD CONSTRAINT inquiries_pkey PRIMARY KEY (id);
ALTER TABLE public.inquiries ADD CONSTRAINT inquiries_suggestion_id_fkey FOREIGN KEY (suggestion_id) REFERENCES suggestions(id) ON DELETE SET NULL;
ALTER TABLE public.inquiries ADD CONSTRAINT inquiries_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE CASCADE;
ALTER TABLE public.inquiries ADD CONSTRAINT inquiries_template_id_fkey FOREIGN KEY (template_id) REFERENCES message_templates(id) ON DELETE SET NULL;
ALTER TABLE public.message_templates ADD CONSTRAINT message_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id);
ALTER TABLE public.message_templates ADD CONSTRAINT message_templates_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.message_templates ADD CONSTRAINT message_templates_org_id_key_language_code_version_key UNIQUE (org_id, key, language_code, version);
ALTER TABLE public.message_templates ADD CONSTRAINT message_templates_pkey PRIMARY KEY (id);
ALTER TABLE public.message_templates ADD CONSTRAINT message_templates_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id);
ALTER TABLE public.products ADD CONSTRAINT products_org_id_barcode_key UNIQUE (org_id, barcode);
ALTER TABLE public.products ADD CONSTRAINT products_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.products ADD CONSTRAINT products_pkey PRIMARY KEY (id);
ALTER TABLE public.purchase_orders ADD CONSTRAINT purchase_orders_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id);
ALTER TABLE public.purchase_orders ADD CONSTRAINT purchase_orders_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.purchase_orders ADD CONSTRAINT purchase_orders_org_id_po_number_key UNIQUE (org_id, po_number);
ALTER TABLE public.purchase_orders ADD CONSTRAINT purchase_orders_pkey PRIMARY KEY (id);
ALTER TABLE public.purchase_orders ADD CONSTRAINT purchase_orders_store_id_fkey FOREIGN KEY (store_id) REFERENCES stores(id) ON DELETE CASCADE;
ALTER TABLE public.purchase_orders ADD CONSTRAINT purchase_orders_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE CASCADE;
ALTER TABLE public.audit_log ADD CONSTRAINT audit_log_actor_fkey FOREIGN KEY (actor) REFERENCES auth.users(id);
ALTER TABLE public.audit_log ADD CONSTRAINT audit_log_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.audit_log ADD CONSTRAINT audit_log_pkey PRIMARY KEY (id);
ALTER TABLE public.suggestions ADD CONSTRAINT suggestions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id);
ALTER TABLE public.suggestions ADD CONSTRAINT suggestions_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.suggestions ADD CONSTRAINT suggestions_pkey PRIMARY KEY (id);
ALTER TABLE public.suggestions ADD CONSTRAINT suggestions_product_id_fkey FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE SET NULL;
ALTER TABLE public.suggestions ADD CONSTRAINT suggestions_status_canon CHECK (status = ANY (ARRAY['PENDING'::suggestion_status, 'SENT'::suggestion_status, 'ACCEPTED'::suggestion_status, 'EDITED'::suggestion_status, 'DISMISSED'::suggestion_status]));
ALTER TABLE public.suggestions ADD CONSTRAINT suggestions_store_id_fkey FOREIGN KEY (store_id) REFERENCES stores(id) ON DELETE CASCADE;
ALTER TABLE public.suggestions ADD CONSTRAINT suggestions_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE SET NULL;
ALTER TABLE public.whatsapp_remote_templates ADD CONSTRAINT whatsapp_remote_templates_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.whatsapp_remote_templates ADD CONSTRAINT whatsapp_remote_templates_org_id_waba_template_name_languag_key UNIQUE (org_id, waba_template_name, language_code);
ALTER TABLE public.whatsapp_remote_templates ADD CONSTRAINT whatsapp_remote_templates_pkey PRIMARY KEY (id);
ALTER TABLE public.whatsapp_outbox ADD CONSTRAINT whatsapp_outbox_channel_id_fkey FOREIGN KEY (channel_id) REFERENCES channel_whatsapp(id) ON DELETE SET NULL;
ALTER TABLE public.whatsapp_outbox ADD CONSTRAINT whatsapp_outbox_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.whatsapp_outbox ADD CONSTRAINT whatsapp_outbox_pkey PRIMARY KEY (id);
ALTER TABLE public.whatsapp_outbox ADD CONSTRAINT whatsapp_outbox_ref_inquiry_id_fkey FOREIGN KEY (ref_inquiry_id) REFERENCES inquiries(id) ON DELETE SET NULL;
ALTER TABLE public.whatsapp_outbox ADD CONSTRAINT whatsapp_outbox_ref_po_id_fkey FOREIGN KEY (ref_po_id) REFERENCES purchase_orders(id) ON DELETE SET NULL;
ALTER TABLE public.whatsapp_outbox ADD CONSTRAINT whatsapp_outbox_template_id_fkey FOREIGN KEY (template_id) REFERENCES message_templates(id) ON DELETE SET NULL;
ALTER TABLE public.admin_message_replies ADD CONSTRAINT admin_message_replies_message_id_fkey FOREIGN KEY (message_id) REFERENCES admin_messages(id) ON DELETE CASCADE;
ALTER TABLE public.admin_message_replies ADD CONSTRAINT admin_message_replies_pkey PRIMARY KEY (id);
ALTER TABLE public.admin_message_replies ADD CONSTRAINT admin_message_replies_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;
ALTER TABLE public.admin_messages ADD CONSTRAINT admin_messages_audience_check CHECK (audience = ANY (ARRAY['all'::text, 'org'::text]));
ALTER TABLE public.admin_messages ADD CONSTRAINT admin_messages_org_id_fkey FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE;
ALTER TABLE public.admin_messages ADD CONSTRAINT admin_messages_pkey PRIMARY KEY (id);
ALTER TABLE public.admin_messages ADD CONSTRAINT admin_messages_sent_by_fkey FOREIGN KEY (sent_by) REFERENCES auth.users(id) ON DELETE SET NULL;
